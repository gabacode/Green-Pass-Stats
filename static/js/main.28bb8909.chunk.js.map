{"version":3,"sources":["lib/distribute.js","lib/colors.js","components/Totals.js","components/BarChart.js","Home.js","index.js"],"names":["select","array","selectionCount","i","iterationCount","length","expectedToBeSelected","resultsArray","console","log","push","selectedSoFar","Math","round","colors","Chart","url","useState","data","setData","keys","setKeys","cols","setCols","loading","setLoading","useEffect","a","axios","get","res","reverse","ks","Object","filter","k","includes","distribute","fetchData","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","minTickGap","tickFormatter","timeStr","moment","format","YAxis","padding","domain","Tooltip","map","key","Line","type","stroke","strokeWidth","dot","BarChart","Legend","Bar","stackId","fill","acquired","issued","Home","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28bb8909.chunk.js","sourcesContent":["export default function select(array, selectionCount) {\n\n    let iterationCount = array.length - 1;\n    let expectedToBeSelected = selectionCount - 1;\n    let resultsArray = [];\n\n    if (selectionCount < 1 || selectionCount > array.length) {\n      console.log(\"Invalid selection count!\");\n      return resultsArray;\n    }\n    var i;\n    for (i in array) {\n      if (selectionCount === 1) {\n        resultsArray.push(array[i]);\n        break;\n      }\n      let selectedSoFar = Math.round(iterationCount * i / expectedToBeSelected);\n      if (selectedSoFar < array.length) {\n        resultsArray.push(array[selectedSoFar]);\n      } else {\n        break;\n      }\n    }\n    return resultsArray;\n  }","const colors = [\n    '#003f5c',\n    '#2f4b7c',\n    '#665191',\n    '#a05195',\n    '#d45087',\n    '#f95d6a',\n    '#ff7c43',\n    '#ffa600'\n]\n\nexport default colors","import React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport axios from \"axios\";\nimport moment from 'moment'\nimport distribute from '../lib/distribute'\nimport colors from \"../lib/colors\";\n\nexport default function Chart({url}) {\n\n  const [data, setData] = useState(null)\n  const [keys, setKeys] = useState(null)\n  const [cols, setCols] = useState(colors)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (data === null) {\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(url)\n          setData(res.data.reverse())\n          const ks = Object.keys(res.data[0]).filter(k => k.includes('total'))\n          setKeys(ks)\n          setCols(distribute(colors, ks.length))\n          setLoading(false)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n      fetchData()\n    }\n  }, [data, url])\n\n  return (\n    !loading &&\n      <div>\n        <ResponsiveContainer width=\"96%\" height={360}>\n          <LineChart data={data} margin={{top: 10, right: 30, left: 50, bottom: 10}}>\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"data\" minTickGap={25} tickFormatter={timeStr => moment(timeStr).format('DD/MM/Y')} />\n            <YAxis padding={{top: 100}} domain={['dataMin', 'dataMax']}/>\n            <Tooltip />\n            {\n              keys.map((key, i) => (\n                <Line type=\"monotone\" dataKey={key} stroke={cols[i]} key={i} strokeWidth={2} dot={false}/>\n              ))\n            }\n          </LineChart>\n        </ResponsiveContainer>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { BarChart, Bar, Legend, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport axios from \"axios\";\nimport moment from 'moment'\nimport distribute from '../lib/distribute'\nimport colors from \"../lib/colors\";\n\nexport default function Chart({url}) {\n\n  const [data, setData] = useState(null)\n  const [keys, setKeys] = useState(null)\n  const [cols, setCols] = useState(colors)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (data === null) {\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(url)\n          setData(res.data.reverse())\n          const ks = Object.keys(res.data[0]).filter(k => !k.includes('data') && !k.includes('total') && !k.includes('all'))\n          setKeys(ks)\n          setCols(distribute(colors, ks.length))\n          setLoading(false)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n      fetchData()\n    }\n  }, [data, url])\n\n  return (\n    !loading &&\n      <div>\n        <ResponsiveContainer width=\"96%\" height={360}>\n          <BarChart data={data} margin={{top: 5, right: 30, left: 50, bottom: 5}}>\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"data\" minTickGap={25} tickFormatter={timeStr => moment(timeStr).format('DD/MM/Y')} />\n            <YAxis padding={{top: 100}} domain={['dataMin', 'dataMax']} />\n            <Tooltip />\n            <Legend />\n            {\n              keys.map((key, i) => (\n                <Bar stackId=\"a\" dataKey={key} fill={cols[i]} key={i} strokeWidth={2} dot={false}/>\n              ))\n            }\n          </BarChart>\n        </ResponsiveContainer>\n    </div>\n  );\n}","import Totals from \"./components/Totals\"\nimport Bar from \"./components/BarChart\"\n\nconst acquired = `https://raw.githubusercontent.com/ministero-salute/it-dgc-opendata/master/data/dgc-acquired.json`\nconst issued = `https://raw.githubusercontent.com/ministero-salute/it-dgc-opendata/master/data/dgc-issued.json`\n\nexport default function Home(){\n  return(\n    <div style={{margin:'10px auto'}}>\n      <h1>Acquired by</h1>\n      <Bar url={acquired}/>\n      <Totals url={acquired}/>\n      <h1>Issued for</h1>\n      <Bar url={issued}/>\n      <Totals url={issued}/>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}